/*
 * Copyright (c) 2020   , WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/javaProject.gradle"

configurations {
    azureFunctionsExtensionPlugin
    azureFunctionsBallerinaBirDir
    azureFunctionsBallerinaJar
}

dependencies {
    implementation project(':azurefunctions-extension')

    testImplementation "org.testng:testng:${testngVersion}"
    testImplementation "commons-io:commons-io:${commomsIOVersion}"
    testImplementation "commons-logging:commons-logging:${commonsLoggingVersion}"
    testImplementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"

    azureFunctionsExtensionPlugin project(":azurefunctions-extension")
    azureFunctionsBallerinaBirDir project(path: ":azurefunctions-extension-balo", configuration: "azureFunctionsBallerinaBirDir")
    azureFunctionsBallerinaJar project(path: ":azurefunctions-extension-balo", configuration: "azureFunctionsBallerinaJar")
}

description = 'Ballerinax - Azure Functions Extension Tests'

def distributionLocation = project(":azurefunctions-extension-balo").buildDir.absolutePath + "/extracted-distribution/jballerina-tools-${ballerinaLangVersion}"

task copyBalAzureFunctionsExt {
    doLast {
        copy {
            from configurations.azureFunctionsExtensionPlugin
            into file("${distributionLocation}/bre/lib/")
        }
    }
}

task copyBallerinaArtifacts {
    doLast {
        copy {
            from configurations.azureFunctionsBallerinaBirDir
            into file("${distributionLocation}/bir-cache/")
        }
        copy {
            from configurations.azureFunctionsBallerinaJar
            into file("${distributionLocation}/bre/lib/")
        }
    }
}

task prepareDistribution {
    dependsOn copyBalAzureFunctionsExt
    dependsOn copyBallerinaArtifacts
}

test {
    dependsOn prepareDistribution
    useTestNG() {
        if (project.hasProperty('LayerTesting')) {
            suites 'src/test/resources/testng-sam-cli.xml'
        } else {
            suites 'src/test/resources/testng.xml'
        }
        systemProperties = [
            ballerinaPack: System.getProperty('ballerinaPack', project.projectDir.absolutePath + "/../azurefunctions-extension-balo/build/extracted-distribution/jballerina-tools-${ballerinaLangVersion}/bin"),
            ballerinaLayer: System.getProperty('ballerinaPack', project.projectDir.absolutePath + "/../ballerina-layer/bootstrap"),
            sampleDir: System.getProperty('sampleDir', project.projectDir.absolutePath + "/../samples")
        ]
	}
}

